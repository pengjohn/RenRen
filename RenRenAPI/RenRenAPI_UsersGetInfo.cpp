/*!
*@FileName: RenRenAPI_UsersGetInfo.cpp
*@Author: pengzhixiong@GoZone
*@Date: 2010-12-29
*@Log: 	Author 			Date 		Description
*
*@section Copyright
* =======================================================================<br>
*          Copyright ? 2010-2012 GOZONE <br>
*                All Rights Reserved.<br>
* The file is generated by ReeRen_Component Wizard for Tranzda Mobile Platform <br>
* =======================================================================<br>
*/

#include "RenRenAPICommon.h"

/**
 * JsonÎÄ¼þ½âÎö
 *
 * \param text
 *
 * \return 
 */
void* RenRenAPI_JsonParse_UsersGetInfo(char *text)
{
	int i = 0;
	cJSON *jsonall;
	cJSON *json;
	cJSON *pTemp0;
	tResponseUsersGetInfo*  Response = new tResponseUsersGetInfo;
	memset(Response, 0 , sizeof(tResponseUsersGetInfo));

	jsonall = cJSON_Parse(text);

	Response->nArraySize = cJSON_GetArraySize(jsonall);
	if(Response->nArraySize>0)
	{
		Response->Array = (tResponseUsersGetInfoItem*) malloc(sizeof( tResponseUsersGetInfoItem) * Response->nArraySize );
		memset(Response->Array, 0, sizeof( tResponseUsersGetInfoItem) * Response->nArraySize );
		for(i = 0; i<Response->nArraySize; i++)
		{
			json = cJSON_GetArrayItem(jsonall, i);

			pTemp0 = cJSON_GetObjectItem(json, "uid");
			if(pTemp0)
			{
				Response->Array[i].uid = pTemp0->valueint;
			}
			pTemp0 = cJSON_GetObjectItem(json, "name");
			if(pTemp0)
			{
				STRCPY_Ex(Response->Array[i].name, pTemp0->valuestring);
			}
			pTemp0 = cJSON_GetObjectItem(json, "sex");
			if(pTemp0)
			{
				Response->Array[i].sex = pTemp0->valueint;
			}
			pTemp0 = cJSON_GetObjectItem(json, "star");
			if(pTemp0)
			{
				Response->Array[i].star = pTemp0->valueint;
			}
			pTemp0 = cJSON_GetObjectItem(json, "zidou");
			if(pTemp0)
			{
				Response->Array[i].zidou = pTemp0->valueint;
			}
			pTemp0 = cJSON_GetObjectItem(json, "birthday");
			if(pTemp0)
			{
				STRCPY_Ex(Response->Array[i].birthday, pTemp0->valuestring);
			}
			pTemp0 = cJSON_GetObjectItem(json, "email_hash");
			if(pTemp0)
			{
				STRCPY_Ex(Response->Array[i].email_hash, pTemp0->valuestring);
			}
			pTemp0 = cJSON_GetObjectItem(json, "tinyurl");
			if(pTemp0)
			{
				STRCPY_Ex(Response->Array[i].tinyurl, pTemp0->valuestring);
			}
			pTemp0 = cJSON_GetObjectItem(json, "headurl");
			if(pTemp0)
			{
				STRCPY_Ex(Response->Array[i].headurl, pTemp0->valuestring);
			}
			pTemp0 = cJSON_GetObjectItem(json, "mainurl");
			if(pTemp0)
			{
				STRCPY_Ex(Response->Array[i].mainurl, pTemp0->valuestring);
			}
			pTemp0 = cJSON_GetObjectItem(json, "hometown_location");
			if(pTemp0)
			{
				int nSize1 = 0, j = 0;
				nSize1 = cJSON_GetArraySize(pTemp0);
				Response->Array[i].nSize_hometown_location = nSize1;
				if( nSize1 != 0 )
				{
					Response->Array[i].hometown_location = NULL;
					Response->Array[i].hometown_location = (UsersGetInfo_hometown_location*) malloc(sizeof( UsersGetInfo_hometown_location ) * nSize1 );
					memset(Response->Array[i].hometown_location, 0 , sizeof(UsersGetInfo_hometown_location) * nSize1 );
				}
				for ( j = 0; j < nSize1; j++ )
				{
					cJSON *Item1 = NULL, *pTemp1 = NULL;
					Item1 = cJSON_GetArrayItem(pTemp0,j);
					pTemp1 = cJSON_GetObjectItem(Item1, "country");
					if(pTemp1)
					{
						STRCPY_Ex(Response->Array[i].hometown_location[j].country, pTemp1->valuestring);
					}
					pTemp1 = cJSON_GetObjectItem(Item1, "province");
					if(pTemp1)
					{
						STRCPY_Ex(Response->Array[i].hometown_location[j].province, pTemp1->valuestring);
					}
					pTemp1 = cJSON_GetObjectItem(Item1, "city");
					if(pTemp1)
					{
						STRCPY_Ex(Response->Array[i].hometown_location[j].city, pTemp1->valuestring);
					}

				}
			}
			pTemp0 = cJSON_GetObjectItem(json, "work_history");
			if(pTemp0)
			{
				int nSize1 = 0, j = 0;
				nSize1 = cJSON_GetArraySize(pTemp0);
				Response->Array[i].nSize_work_history = nSize1;
				if( nSize1 != 0 )
				{
					Response->Array[i].work_history = NULL;
					Response->Array[i].work_history = (UsersGetInfo_work_history*) malloc(sizeof( UsersGetInfo_work_history ) * nSize1 );
					memset(Response->Array[i].work_history, 0 , sizeof(UsersGetInfo_work_history) * nSize1 );
				}
				for ( j = 0; j < nSize1; j++ )
				{
					cJSON *Item1 = NULL, *pTemp1 = NULL;
					Item1 = cJSON_GetArrayItem(pTemp0,j);
					pTemp1 = cJSON_GetObjectItem(Item1, "company_name");
					if(pTemp1)
					{
						STRCPY_Ex(Response->Array[i].work_history[j].company_name, pTemp1->valuestring);
					}
					pTemp1 = cJSON_GetObjectItem(Item1, "description");
					if(pTemp1)
					{
						STRCPY_Ex(Response->Array[i].work_history[j].description, pTemp1->valuestring);
					}
					pTemp1 = cJSON_GetObjectItem(Item1, "start_date");
					if(pTemp1)
					{
						STRCPY_Ex(Response->Array[i].work_history[j].start_date, pTemp1->valuestring);
					}
					pTemp1 = cJSON_GetObjectItem(Item1, "end_date");
					if(pTemp1)
					{
						STRCPY_Ex(Response->Array[i].work_history[j].end_date, pTemp1->valuestring);
					}

				}
			}
			pTemp0 = cJSON_GetObjectItem(json, "university_history");
			if(pTemp0)
			{
				int nSize1 = 0, j = 0;
				nSize1 = cJSON_GetArraySize(pTemp0);
				Response->Array[i].nSize_university_history = nSize1;
				if( nSize1 != 0 )
				{
					Response->Array[i].university_history = NULL;
					Response->Array[i].university_history = (UsersGetInfo_university_history*) malloc(sizeof( UsersGetInfo_university_history ) * nSize1 );
					memset(Response->Array[i].university_history, 0 , sizeof(UsersGetInfo_university_history) * nSize1 );
				}
				for ( j = 0; j < nSize1; j++ )
				{
					cJSON *Item1 = NULL, *pTemp1 = NULL;
					Item1 = cJSON_GetArrayItem(pTemp0,j);
					pTemp1 = cJSON_GetObjectItem(Item1, "name");
					if(pTemp1)
					{
						STRCPY_Ex(Response->Array[i].university_history[j].name, pTemp1->valuestring);
					}
					pTemp1 = cJSON_GetObjectItem(Item1, "year");
					if(pTemp1)
					{
						Response->Array[i].university_history[j].year = pTemp1->valueint;
					}
					pTemp1 = cJSON_GetObjectItem(Item1, "department");
					if(pTemp1)
					{
						STRCPY_Ex(Response->Array[i].university_history[j].department, pTemp1->valuestring);
					}

				}
			}
			pTemp0 = cJSON_GetObjectItem(json, "hs_history");
			if(pTemp0)
			{
				int nSize1 = 0, j = 0;
				nSize1 = cJSON_GetArraySize(pTemp0);
				Response->Array[i].nSize_hs_history = nSize1;
				if( nSize1 != 0 )
				{
					Response->Array[i].hs_history = NULL;
					Response->Array[i].hs_history = (UsersGetInfo_hs_history*) malloc(sizeof( UsersGetInfo_hs_history ) * nSize1 );
					memset(Response->Array[i].hs_history, 0 , sizeof(UsersGetInfo_hs_history) * nSize1 );
				}
				for ( j = 0; j < nSize1; j++ )
				{
					cJSON *Item1 = NULL, *pTemp1 = NULL;
					Item1 = cJSON_GetArrayItem(pTemp0,j);
					pTemp1 = cJSON_GetObjectItem(Item1, "name");
					if(pTemp1)
					{
						STRCPY_Ex(Response->Array[i].hs_history[j].name, pTemp1->valuestring);
					}
					pTemp1 = cJSON_GetObjectItem(Item1, "grad_year");
					if(pTemp1)
					{
						Response->Array[i].hs_history[j].grad_year = pTemp1->valueint;
					}

				}
			}
			pTemp0 = cJSON_GetObjectItem(json, "contact_info");
			if(pTemp0)
			{
				int nSize1 = 0, j = 0;
				nSize1 = cJSON_GetArraySize(pTemp0);
				Response->Array[i].nSize_contact_info = nSize1;
				if( nSize1 != 0 )
				{
					Response->Array[i].contact_info = NULL;
					Response->Array[i].contact_info = (UsersGetInfo_contact_info*) malloc(sizeof( UsersGetInfo_contact_info ) * nSize1 );
					memset(Response->Array[i].contact_info, 0 , sizeof(UsersGetInfo_contact_info) * nSize1 );
				}
				for ( j = 0; j < nSize1; j++ )
				{
					cJSON *Item1 = NULL, *pTemp1 = NULL;
					Item1 = cJSON_GetArrayItem(pTemp0,j);
					pTemp1 = cJSON_GetObjectItem(Item1, "msn");
					if(pTemp1)
					{
						STRCPY_Ex(Response->Array[i].contact_info[j].msn, pTemp1->valuestring);
					}
					pTemp1 = cJSON_GetObjectItem(Item1, "mobile_tel");
					if(pTemp1)
					{
						STRCPY_Ex(Response->Array[i].contact_info[j].mobile_tel, pTemp1->valuestring);
					}
					pTemp1 = cJSON_GetObjectItem(Item1, "telephone");
					if(pTemp1)
					{
						STRCPY_Ex(Response->Array[i].contact_info[j].telephone, pTemp1->valuestring);
					}
					pTemp1 = cJSON_GetObjectItem(Item1, "web_site");
					if(pTemp1)
					{
						STRCPY_Ex(Response->Array[i].contact_info[j].web_site, pTemp1->valuestring);
					}
					pTemp1 = cJSON_GetObjectItem(Item1, "qq");
					if(pTemp1)
					{
						STRCPY_Ex(Response->Array[i].contact_info[j].qq, pTemp1->valuestring);
					}

				}
			}


		}
	}
	cJSON_Delete(jsonall);
	return Response;
}