/*!
*@FileName: RenRenAPI_BlogGets.cpp
*@Author: zengying@GoZone
*@Date: 2010-12-24
*@Log: 	Author 			Date 		Description
*
*@section Copyright
* =======================================================================<br>
*          Copyright ? 2010-2012 GOZONE <br>
*                All Rights Reserved.<br>
* The file is generated by ReeRen_Component Wizard for Tranzda Mobile Platform <br>
* =======================================================================<br>
*/

#include "RenRenAPICommon.h"

/**
 * JsonÎÄ¼þ½âÎö
 *
 * \param text
 *
 * \return 
 */
void* RenRenAPI_JsonParse_BlogGets(char *text)
{
	cJSON *json;
	cJSON *pTemp0;
	tResponseBlogGets*  Response = new tResponseBlogGets;
	memset(Response, 0 , sizeof(tResponseBlogGets));

	json = cJSON_Parse(text);

	pTemp0 = cJSON_GetObjectItem(json, "blogs");
	if(pTemp0)
	{
		int nSize1 = 0, i = 0;
		nSize1 = cJSON_GetArraySize(pTemp0);
		Response->nSize_blogs = nSize1;
		if( nSize1 != 0 )
		{
			Response->blogs = NULL;
			Response->blogs = (BlogGets_blogs*) malloc(sizeof( BlogGets_blogs ) * nSize1 );
			memset(Response->blogs, 0 , sizeof(BlogGets_blogs) * nSize1 );
		}
		for ( i = 0; i < nSize1; i++ )
		{
			cJSON *Item1 = NULL, *pTemp1 = NULL;
			Item1 = cJSON_GetArrayItem(pTemp0,i);
			pTemp1 = cJSON_GetObjectItem(Item1, "id");
			if(pTemp1)
			{
				Response->blogs[i].id = pTemp1->valueint;
			}
			pTemp1 = cJSON_GetObjectItem(Item1, "time");
			if(pTemp1)
			{
				STRCPY_Ex(Response->blogs[i].time, pTemp1->valuestring);
			}
			pTemp1 = cJSON_GetObjectItem(Item1, "cate");
			if(pTemp1)
			{
				STRCPY_Ex(Response->blogs[i].cate, pTemp1->valuestring);
			}
			pTemp1 = cJSON_GetObjectItem(Item1, "title");
			if(pTemp1)
			{
				STRCPY_Ex(Response->blogs[i].title, pTemp1->valuestring);
			}
			pTemp1 = cJSON_GetObjectItem(Item1, "content");
			if(pTemp1)
			{
				STRCPY_Ex(Response->blogs[i].content, pTemp1->valuestring);
			}
			pTemp1 = cJSON_GetObjectItem(Item1, "view_count");
			if(pTemp1)
			{
				Response->blogs[i].view_count = pTemp1->valueint;
			}
			pTemp1 = cJSON_GetObjectItem(Item1, "comment_count");
			if(pTemp1)
			{
				Response->blogs[i].comment_count = pTemp1->valueint;
			}
			pTemp1 = cJSON_GetObjectItem(Item1, "visable");
			if(pTemp1)
			{
				Response->blogs[i].visable = pTemp1->valueint;
			}

		}
	}	
	pTemp0 = cJSON_GetObjectItem(json, "uid");
	if(pTemp0)
	{
		//Response->uid = pTemp0->valueint;
		STRCPY_Ex(Response->uid, pTemp0->valuestring);
	}
	pTemp0 = cJSON_GetObjectItem(json, "name");
	if(pTemp0)
	{
		STRCPY_Ex(Response->name, pTemp0->valuestring);
	}
	pTemp0 = cJSON_GetObjectItem(json, "total");
	if(pTemp0)
	{
		STRCPY_Ex(Response->total, pTemp0->valuestring);
	}



	cJSON_Delete(json);
	return Response;
}