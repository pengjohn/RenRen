/*!
*@FileName: RenRenAPI_FeedGetFangle.cpp
*@Author: zbingwen@GoZone
*@Date: 2011-1-6
*@Log: 	Author 			Date 		Description
*
*@section Copyright
* =======================================================================<br>
*          Copyright ? 2010-2012 GOZONE <br>
*                All Rights Reserved.<br>
* The file is generated by ReeRen_Component Wizard for Tranzda Mobile Platform <br>
* =======================================================================<br>
*/

#include "RenRenAPICommon.h"

/**
 * JsonÎÄ¼þ½âÎö
 *
 * \param text
 *
 * \return 
 */
void* RenRenAPI_JsonParse_FeedGetFangle(char *text)
{
	int i = 0;
	cJSON *jsonall;
	cJSON *json;
	cJSON *pTemp0;
	tResponseFeedGetFangle*  Response = new tResponseFeedGetFangle;
	memset(Response, 0 , sizeof(tResponseFeedGetFangle));

	jsonall = cJSON_Parse(text);

	Response->nArraySize = cJSON_GetArraySize(jsonall);
	if(Response->nArraySize>0)
	{
		Response->Array = (tResponseFeedGetFangleItem*) malloc(sizeof( tResponseFeedGetFangleItem) * Response->nArraySize );
		memset(Response->Array, 0 , sizeof(tResponseFeedGetFangleItem) * Response->nArraySize);
		for(i = 0; i<Response->nArraySize; i++)
		{
			json = cJSON_GetArrayItem(jsonall, i);

			pTemp0 = cJSON_GetObjectItem(json, "source_id");
			if(pTemp0)
			{
				Response->Array[i].source_id = pTemp0->valuedouble;
			}
			pTemp0 = cJSON_GetObjectItem(json, "actor_id");
			if(pTemp0)
			{
				Response->Array[i].actor_id = pTemp0->valueint;
			}
			pTemp0 = cJSON_GetObjectItem(json, "name");
			if(pTemp0)
			{
				STRCPY_Ex(Response->Array[i].name, pTemp0->valuestring);
			}
			pTemp0 = cJSON_GetObjectItem(json, "time");
			if(pTemp0)
			{
				STRCPY_Ex(Response->Array[i].time, pTemp0->valuestring);
			}
			pTemp0 = cJSON_GetObjectItem(json, "prefix");
			if(pTemp0)
			{
				STRCPY_Ex(Response->Array[i].prefix, pTemp0->valuestring);
			}
			pTemp0 = cJSON_GetObjectItem(json, "title");
			if(pTemp0)
			{
				STRCPY_Ex(Response->Array[i].title, pTemp0->valuestring);
			}
			pTemp0 = cJSON_GetObjectItem(json, "href");
			if(pTemp0)
			{
				STRCPY_Ex(Response->Array[i].href, pTemp0->valuestring);
			}
			pTemp0 = cJSON_GetObjectItem(json, "sufix");
			if(pTemp0)
			{
				STRCPY_Ex(Response->Array[i].sufix, pTemp0->valuestring);
			}
			pTemp0 = cJSON_GetObjectItem(json, "type");
			if(pTemp0)
			{
				Response->Array[i].type = pTemp0->valueint;
			}
			pTemp0 = cJSON_GetObjectItem(json, "object_id");
			if(pTemp0)
			{
				Response->Array[i].object_id = pTemp0->valuedouble;
			}
			pTemp0 = cJSON_GetObjectItem(json, "owner_id");
			if(pTemp0)
			{
				Response->Array[i].owner_id = pTemp0->valueint;
			}



		}
	}
	cJSON_Delete(jsonall);
	return Response;
}
