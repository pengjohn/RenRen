/*!
*@FileName: RenRenAPI_PagesGetList.cpp
*@Author: pengzhixiong@GoZone
*@Date: 2010-12-28
*@Log: 	Author 			Date 		Description
*
*@section Copyright
* =======================================================================<br>
*          Copyright ? 2010-2012 GOZONE <br>
*                All Rights Reserved.<br>
* The file is generated by ReeRen_Component Wizard for Tranzda Mobile Platform <br>
* =======================================================================<br>
*/

#include "RenRenAPICommon.h"

/**
 * JsonÎÄ¼þ½âÎö
 *
 * \param text
 *
 * \return 
 */
void* RenRenAPI_JsonParse_PagesGetList(char *text)
{
	int i = 0;
	cJSON *jsonall;
	cJSON *json;
	cJSON *pTemp0;
	tResponsePagesGetList*  Response = new tResponsePagesGetList;
	memset(Response, 0 , sizeof(tResponsePagesGetList));

	jsonall = cJSON_Parse(text);

	Response->nArraySize = cJSON_GetArraySize(jsonall);
	if(Response->nArraySize>0)
	{
		Response->Array = (tResponsePagesGetListItem*) malloc(sizeof( tResponsePagesGetListItem) * Response->nArraySize );
		memset(Response->Array, 0, sizeof( tResponsePagesGetListItem) * Response->nArraySize );
		for(i = 0; i<Response->nArraySize; i++)
		{
			json = cJSON_GetArrayItem(jsonall, i);

			pTemp0 = cJSON_GetObjectItem(json, "page_id");
			if(pTemp0)
			{
				Response->Array[i].page_id = pTemp0->valueint;
			}
			pTemp0 = cJSON_GetObjectItem(json, "name");
			if(pTemp0)
			{
				STRCPY_Ex(Response->Array[i].name, pTemp0->valuestring);
			}
			pTemp0 = cJSON_GetObjectItem(json, "headurl");
			if(pTemp0)
			{
				STRCPY_Ex(Response->Array[i].headurl, pTemp0->valuestring);
			}
			pTemp0 = cJSON_GetObjectItem(json, "desc");
			if(pTemp0)
			{
				STRCPY_Ex(Response->Array[i].desc, pTemp0->valuestring);
			}
			pTemp0 = cJSON_GetObjectItem(json, "category_name");
			if(pTemp0)
			{
				STRCPY_Ex(Response->Array[i].category_name, pTemp0->valuestring);
			}
			pTemp0 = cJSON_GetObjectItem(json, "fans_count");
			if(pTemp0)
			{
				Response->Array[i].fans_count = pTemp0->valueint;
			}
			pTemp0 = cJSON_GetObjectItem(json, "is_fan");
			if(pTemp0)
			{
				Response->Array[i].is_fan = pTemp0->valueint;
			}



		}
	}
	cJSON_Delete(jsonall);
	return Response;
}
