/*!
*@FileName: RenRenForm_WebPanel.cpp
*@Author: pengzhixiong@GoZone
*@Date: 2010-12-23
*@Brief: WebPanel Form
*@Log: 	Author 			Date 		Description
*
*@section Copyright
* =======================================================================<br>
*          Copyright ? 2010-2012 GOZONE <br>
*                All Rights Reserved.<br>
* The file is generated by RenRen_Component Wizard for Tranzda Mobile Platform <br>
* =======================================================================<br>
*/

#include "RenRenAPICommon.h"
#include "RenRenForm_WebPanel.h"
#include "TCOM_TBrowser_WebClient_IIDs.h"
#include "App_RenRenApp.h"

// 构造函数
TWebPanelForm::TWebPanelForm(TApplication * pApp, const TUChar* in_pszTitle, const char* in_pszURL):TWindow(pApp)
{
	m_TitleBtnLeft = -1;
	m_TitleBtnRight = -1;

	m_pWebPanel = NULL;
	m_pWebPanelTComObj = NULL;	
	pszURL = NULL;
	pszTitle = NULL;
	
	//Url
	if(in_pszURL != NULL)
	{
		Int32 nLen = 0;
		nLen = strlen(in_pszURL) + 1;
		pszURL = new char[nLen];
		MemSet(pszURL, 0, nLen);
		strncpy(pszURL, in_pszURL, nLen);
	}
	//Ttile
	if(in_pszTitle != NULL)
	{
		Int32 nLen = 0;
		nLen = TUString::StrLen(in_pszTitle) + 1;
		pszTitle = new TUChar[nLen];
		MemSet(pszTitle, 0, nLen);
		TUString::StrNCopy(pszTitle, in_pszTitle, nLen);
	}
	
	Create(APP_RE_ID_WebPanelForm);
}

// 析构函数
TWebPanelForm::~TWebPanelForm(void)
{
	if(pszURL != NULL)
	{
		delete pszURL;
		pszURL = NULL;
	}

	if(pszTitle != NULL)
	{
		delete pszTitle;
		pszTitle = NULL;
	}

	if(m_pWebPanelTComObj)
	{
	    m_pWebPanelTComObj->resetGlobalDefaultWebViewEventHandler();
	    m_pWebPanelTComObj->Release();
	    m_pWebPanelTComObj = NULL;
	}

	if (m_pWebPanel)
	{
	    //m_pWebPanel->stopLoad();
	    m_pWebPanel->close();
	    m_pWebPanel = NULL;
	}
}

// 窗口事件处理
Boolean TWebPanelForm::EventHandler(TApplication * pApp, EventType * pEvent)
{
	Boolean bHandled = FALSE;

	switch (pEvent->eType)
	{
			//窗口创建
		case EVENT_WinInit:
			{
				_OnWinInitEvent(pApp, pEvent);
				bHandled = TRUE;
			}
			break;

		case EVENT_WinPaint:
			{
				DrawWindow();
				bHandled = TRUE;
				break;
			}		
			//窗口关闭
		case EVENT_WinClose:
			{
				_OnWinClose(pApp, pEvent);
			}
			break;
		
			//点击控件
		case EVENT_CtrlSelect:
			{
				bHandled = _OnCtrlSelectEvent(pApp, pEvent);
			}
			break;
		
			//控件获取焦点
		case EVENT_CtrlSetFocus:
			{
				bHandled = _OnCtrlSetFocusEvent(pApp, pEvent);
			}
			break;
			
			//控件丢失焦点
		case EVENT_CtrlKillFocus :
			{
				bHandled = _OnCtrlKillFocusEvent(pApp, pEvent);
			}
			break;
			
			//输入框内容变化
		case EVENT_FieldChanged:
			{
				_OnFldChangedEvent(pApp, pEvent);
				bHandled = TRUE;
			}
			break;
			
			//窗口的背景
		case EVENT_WinEraseClient:
			{
				TDC dc(this);
				WinEraseClientEventType *pEraseEvent = reinterpret_cast< WinEraseClientEventType* >( pEvent );
				TRectangle rc(pEraseEvent->rc);
				dc.SetBackColor(RGB_COLOR_FORM_BACKGROUND);
				dc.EraseRectangle(&rc, 0);
				dc.DrawBitmapsH(TResource::LoadConstBitmap(APP_RE_ID_BITMAP_title_bg), 0, 0, SCR_W,GUI_API_STYLE_ALIGNMENT_LEFT);
				pEraseEvent->result = 1;				
				bHandled = TRUE;
			}
			break;

			// 右软键事件 
		case EVENT_KeyCommand: 
			{ 
				if( pEvent->sParam1 == SYS_KEY_SOFTKEY_RIGHT_UP || pEvent->sParam1 == SYS_KEY_SOFTKEY_RIGHT_LONG ) 
				{ 
					// 模拟标题栏右按钮选中消息 
					HitControl(m_TitleBtnRight); 
					bHandled = TRUE; 
				} 
			} 
			break;
			
			//下载完成事件
		case MSG_DL_THREAD_NOTIFY:
			{
				bHandled = TRUE;
			}
			break;

		default:
			break;
	}

	if (!bHandled)
	{
		bHandled = TWindow::EventHandler(pApp, pEvent);
	}

	return bHandled;
}

// 窗口初始化
Boolean TWebPanelForm::_OnWinInitEvent(TApplication * pApp, EventType * pEvent)
{
	int iRet = eFailed;

	//m_TitleBtnLeft = SetAppTitleButton(this, APP_RE_ID_STRING_OK,TITLE_BUTTON_LEFT);
	m_TitleBtnRight = SetAppTitleButton(this, APP_RE_ID_STRING_Back,TITLE_BUTTON_RIGHT);
	SetAppTilte(this, 0, pszTitle);
	SetText(pszTitle, pszURL, " ");
	return TRUE;
}

// 关闭窗口时，保存设置信息
Boolean TWebPanelForm::_OnWinClose(TApplication * pApp, EventType * pEvent)
{
	return TRUE;
}

// 控件点击事件处理
Boolean TWebPanelForm::_OnCtrlSelectEvent(TApplication * pApp, EventType * pEvent)
{
	Boolean bHandled;
	bHandled = FALSE;
	Int32 nCtrlID = pEvent->sParam1;

	if(m_TitleBtnRight == nCtrlID)
	{
		bHandled = TRUE; 
		this->CloseWindow();
		return bHandled;
	}
	else if(m_TitleBtnLeft == nCtrlID)
	{
		bHandled = TRUE; 		
		return bHandled;
	}

	switch(nCtrlID)
	{
		case APP_RE_ID_TestForm_Test01:
			{
				bHandled = TRUE; 	
			}
			break;
		default:
			break;
	}

	return bHandled;
}

//控件获取焦点
Boolean TWebPanelForm::_OnCtrlSetFocusEvent(TApplication * pApp, EventType * pEvent)
{
	Boolean bHandled = FALSE;
	Int32 CtrlID = pEvent->sParam1; 

	//:TODO:

	return bHandled;	
}

//控件丢失焦点
Boolean TWebPanelForm::_OnCtrlKillFocusEvent(TApplication * pApp, EventType * pEvent)
{
	Boolean bHandled = FALSE;
	Int32 CtrlID = pEvent->sParam1; 

	//:TODO:

	return bHandled;
}

// 文本框输入处理事件
Boolean TWebPanelForm::_OnFldChangedEvent(TApplication * pApp, EventType* pEvent)
{
	Boolean bHandle = FALSE;
	Int32 CtrlID = pEvent->sParam1; 

	//:TODO:

	return bHandle;
}

/** 设置页面显示内容
*
* \param pszTitle 标题
* \param pURL     链接
* \param pDes     描述
* \return 无
*/
void TWebPanelForm::SetText(const TUChar* pszTitle, const char* pURL, const char* pDes)
{
	TUChar    *pText;

	//设定网页显示的起始位置（左上角坐标）
	TRectangle WebRet(0,0,0,0);
	WebRet.SetRect(0, TITLEBAR_H, SCR_W, SCR_H - STATUSBAR_H - TITLEBAR_H);
	m_pWebPanel = TBrowser::TWebPanel::create(this, WebRet, NULL);

	m_pWebPanelTComObj = m_pWebPanel->getParentClient();
	UInt32 ulAccountID = 0;
	ulAccountID = (UInt32)(static_cast<TApp_RenRenApp*>(GetApplication()))->GetConnectID();
	m_pWebPanelTComObj->setNetAccountID(ulAccountID);
	m_pWebPanelTComObj->setAutoConnect(FALSE);
	m_pWebPanelTComObj->AddRef();

	//加载一个URL 链接 并于上面指定的区域中显示
	pText = new TUChar[strlen(pURL)+1];
	if (pText)
	{

		MemSet(pText, 0, (strlen(pURL)+1) * sizeof(TUChar));
		TUString::StrUtf8ToStrUnicode(pText, (Char*)pURL);
		m_pWebPanel->loadUrl(pText);

		//m_pWebPanel->webView().setZoomMultiplier(4.0);
		//m_pWebPanel->webView().setViewZoomMultiplier(4.0);
		//float k=m_pWebPanel->webView().getZoomMultiplier();
		
		delete [] pText;
		pText = NULL;
	}

}