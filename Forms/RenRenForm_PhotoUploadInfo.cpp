/*!
*@FileName: RenRenForm_PhotoUploadInfo.cpp
*@Author: lee-5959f8a390f@GoZone
*@Date: 2011-6-8
*@Brief: 照片上传信息Form
*@Log: 	Author 			Date 		Description
*
*@section Copyright
* =======================================================================<br>
*          Copyright ? 2010-2012 GOZONE <br>
*                All Rights Reserved.<br>
* The file is generated by RenRen_Component Wizard for Tranzda Mobile Platform <br>
* =======================================================================<br>
*/

#include "RenRenAPICommon.h"
#include "RenRenForm_PhotoUploadInfo.h"


// 构造函数
TPhotoUploadInfoForm::TPhotoUploadInfoForm(TApplication* pApp, Int32 nHwndId, Boolean bNew):TWindow(pApp)
{
	m_TitleBtnLeft = -1;
	m_TitleBtnRight = -1;
	pPhotoBmp = NULL;

 	MemSet(&m_msgData, 0x0, sizeof(PostNotifyMsgDataType));
	m_msgData.nHwndId = nHwndId;
	m_msgData.nParam = RR_PhotosUpload;
		
	Create(APP_RE_ID_PhotoUploadInfoForm);
}

// 析构函数
TPhotoUploadInfoForm::~TPhotoUploadInfoForm(void)
{
	RenRenAPICommon_DownloadCancelByHwndId(this->GetWindowHwndId());
	if( pPhotoBmp != NULL)
	{
		pPhotoBmp->Destroy();
		pPhotoBmp = NULL; 								
	}		
}

// 窗口事件处理
Boolean TPhotoUploadInfoForm::EventHandler(TApplication * pApp, EventType * pEvent)
{
	Boolean bHandled = FALSE;

	switch (pEvent->eType)
	{
			//窗口创建
		case EVENT_WinInit:
			{
				_OnWinInitEvent(pApp, pEvent);
				bHandled = TRUE;
			}
			break;
		
			//窗口关闭
		case EVENT_WinClose:
			{
				_OnWinClose(pApp, pEvent);
			}
			break;
		
			//点击控件
		case EVENT_CtrlSelect:
			{
				bHandled = _OnCtrlSelectEvent(pApp, pEvent);
			}
			break;
		
			//控件获取焦点
		case EVENT_CtrlSetFocus:
			{
				bHandled = _OnCtrlSetFocusEvent(pApp, pEvent);
			}
			break;
			
			//控件丢失焦点
		case EVENT_CtrlKillFocus :
			{
				bHandled = _OnCtrlKillFocusEvent(pApp, pEvent);
			}
			break;
			
			//输入框内容变化
		case EVENT_FieldChanged:
			{
				_OnFldChangedEvent(pApp, pEvent);
				bHandled = TRUE;
			}
			break;
			
			//窗口的背景
		case EVENT_WinEraseClient:
			{
				TDC dc(this);
				WinEraseClientEventType *pEraseEvent = reinterpret_cast< WinEraseClientEventType* >( pEvent );
				TRectangle rc(pEraseEvent->rc);
				dc.SetBackColor(RGB_COLOR_FORM_BACKGROUND);
				dc.EraseRectangle(&rc, 0);
				dc.DrawBitmapsH(TResource::LoadConstBitmap(APP_RE_ID_BITMAP_title_bg), 0, 0, SCR_W,GUI_API_STYLE_ALIGNMENT_LEFT);
				pEraseEvent->result = 1;				
				bHandled = TRUE;
			}
			break;

			// 右软键事件 
		case EVENT_KeyCommand: 
			{ 
				if( pEvent->sParam1 == SYS_KEY_SOFTKEY_RIGHT_UP || pEvent->sParam1 == SYS_KEY_SOFTKEY_RIGHT_LONG ) 
				{ 
					// 模拟标题栏右按钮选中消息 
					HitControl(m_TitleBtnRight); 
					bHandled = TRUE; 
				} 
			} 
			break;
			
			//下载完成事件
		case MSG_DL_THREAD_NOTIFY:
			{
				bHandled = TRUE;
			}
			break;

		default:
			break;
	}

	if (!bHandled)
	{
		bHandled = TWindow::EventHandler(pApp, pEvent);
	}

	return bHandled;
}

// 窗口初始化
Boolean TPhotoUploadInfoForm::_OnWinInitEvent(TApplication * pApp, EventType * pEvent)
{
	int iRet = eFailed;
	//Open Input Method
	ImeOpenIme( IME_MODE_VOLITANT,	IME_CLASS_CHINESE);
	
	m_TitleBtnLeft = SetAppTitleButton(this, APP_RE_ID_STRING_Send,TITLE_BUTTON_LEFT);
	m_TitleBtnRight = SetAppTitleButton(this, APP_RE_ID_STRING_Cancel,TITLE_BUTTON_RIGHT);
	SetAppTilte(this, APP_RE_ID_STRING_UploadPhoto);

	char* FileName  = NULL;
	FileName = Get_Url_Params(RR_PhotosUpload, "upload");

	TBitmap* pDownLoadBitmap = NULL;
	pDownLoadBitmap = LoadImgByPath(FileName);

	if(pDownLoadBitmap)
	{
		TImage* pTImage;	
		pTImage = static_cast< TImage* >(this->GetControlPtr(APP_RE_ID_PhotoUploadInfoForm_UploadPhotoBitmap));
		
		if(pTImage)
		{
			TRectangle RC;							
			pTImage->GetBounds(&RC);
			if( pPhotoBmp != NULL)
			{
				pPhotoBmp->Destroy();
				pPhotoBmp = NULL; 							
			}
				
			pPhotoBmp = TBitmap::Create(RC.Width(), RC.Height(), pDownLoadBitmap->GetDepth());
			pPhotoBmp->QuickZoom(pDownLoadBitmap, TRUE, TRUE,RGBA(0,0,0,255));

			pTImage->SetBitmap(pPhotoBmp);
			pTImage->Draw();
		}				

		//释放图片
		pDownLoadBitmap->Destroy();
		pDownLoadBitmap = NULL; 						
	}		

	//:TODO:


	return TRUE;
}

// 关闭窗口时，保存设置信息
Boolean TPhotoUploadInfoForm::_OnWinClose(TApplication * pApp, EventType * pEvent)
{
	return TRUE;
}

// 控件点击事件处理
Boolean TPhotoUploadInfoForm::_OnCtrlSelectEvent(TApplication * pApp, EventType * pEvent)
{
	Boolean bHandled;
	bHandled = FALSE;
	Int32 nCtrlID = pEvent->sParam1;

	if(m_TitleBtnRight == nCtrlID)
	{
		bHandled = TRUE; 
		this->CloseWindow();
		return bHandled;
	}
	else if(m_TitleBtnLeft == nCtrlID)
	{
		TEdit* tContentEdit =static_cast< TEdit* >(GetControlPtr(APP_RE_ID_PhotoUploadInfoForm_PhotoInfoEditField));
		if(tContentEdit)
		{
			
			const TUChar *pCaption;
			Char pszCaption[RENREN_LENGTH_BLOG_CONTENT*3+1];		
			
			pCaption = tContentEdit->GetCaption();//获取正文内容
			TUString::StrUnicodeToStrUtf8(pszCaption, pCaption);				
			STRCPY_Ex(m_msgData.pszEditContent, (char*)pszCaption); 	

			SS_GTID 		gtidMain;
			SS_GetCurrentGTID(&gtidMain);
			App_PostMessageEx(&gtidMain, MSG_POST_THREAD_NOTIFY, &m_msgData, sizeof(PostNotifyMsgDataType) ,m_msgData.nHwndId, m_msgData.nCtrlId);
			this->CloseWindow(); 
			
		}		
		bHandled = TRUE; 		
		return bHandled;
	}

	switch(nCtrlID)
	{
		case APP_RE_ID_TestForm_Test01:
			{
				bHandled = TRUE; 	
			}
			break;
		default:
			break;
	}

	return bHandled;
}

//控件获取焦点
Boolean TPhotoUploadInfoForm::_OnCtrlSetFocusEvent(TApplication * pApp, EventType * pEvent)
{
	Boolean bHandled = FALSE;
	Int32 CtrlID = pEvent->sParam1; 

	//:TODO:

	return bHandled;	
}

//控件丢失焦点
Boolean TPhotoUploadInfoForm::_OnCtrlKillFocusEvent(TApplication * pApp, EventType * pEvent)
{
	Boolean bHandled = FALSE;
	Int32 CtrlID = pEvent->sParam1; 

	//:TODO:

	return bHandled;
}

// 文本框输入处理事件
Boolean TPhotoUploadInfoForm::_OnFldChangedEvent(TApplication * pApp, EventType* pEvent)
{
	Boolean bHandle = FALSE;
	Int32 CtrlID = pEvent->sParam1; 

	//:TODO:

	return bHandle;
}
